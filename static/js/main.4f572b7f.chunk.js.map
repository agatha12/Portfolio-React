{"version":3,"sources":["about.js","Contact.js","App.js","serviceWorker.js","index.js","agpic.jpg"],"names":["About","react_default","a","createElement","id","type","className","src","agpic","alt","Component","Contact","href","target","data-toggle","data-target","aboutMe","ReactDOM","render","about","document","getElementById","contact","src_Contact","App","onClick","Boolean","window","location","hostname","match","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4f572b7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport agpic from \"./agpic.jpg\"\r\n\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n         <section id=\"header\">\r\n      <button type=\"button\" className=\"hvr-wobble-top\" id=\"about\">About</button>\r\n      <button type=\"button\" className=\"hvr-wobble-top\" id=\"contact\">Contact</button>\r\n      <button type=\"button\" className=\"hvr-wobble-top\" id=\"portfolio\">Portfolio</button>\r\n      <button type=\"button\" className=\"hvr-wobble-top\" id=\"resume\">Resume</button>\r\n  </section >\r\n    \r\n    <section id=\"aboutdisplay\">\r\n    <div id=\"agpic\">\r\n    <img src={agpic} alt=\"pic\"></img>\r\n    <p>Shedrick Pelt sdotpdotmedia.com social media: @sdotpdotmedia</p>\r\n    </div>\r\n    \r\n     <p id=\"brand\">    Enthusiastic full stack developer with a background in Quality Control and Management. Highly motivated, fast learner eager to expand my knowledge of the field and contribute to your company in a meaningful way. Great communicator with experience collaborating on a team to creatively solve problems and produce a quality product on a tight deadline. Detail oriented and neat programer who thrives in a fast paced environment. Proficient in CSS, JavaScript and Node and highly adept at learning new technologies.</p>\r\n\r\n\r\n    </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section id=\"header\">\r\n                    <button type=\"button\" className=\"hvr-wobble-top\" id=\"about\">About</button>\r\n                    <button type=\"button\" className=\"hvr-wobble-top\" id=\"contact\">Contact</button>\r\n                    <button type=\"button\" className=\"hvr-wobble-top\" id=\"portfolio\">Portfolio</button>\r\n                    <button type=\"button\" className=\"hvr-wobble-top\" id=\"resume\">Resume</button>\r\n                </section >\r\n\r\n                <section id=\"aboutdisplay\">\r\n                    <div id=\"conactdiv\"\r\n                    ><p className=\"space\"></p>\r\n                    <h1>Contact Info</h1>\r\n                    <p>Email: agkiecun@gmail.com</p><p><a href=\"https://github.com/agatha12\" className=\"contactlink\" target=\"blank\">GitHub</a></p>\r\n                    <p><a href=\"https://www.linkedin.com/in/agatha-kiecun-783a625b/\" className=\"contactlink\" target=\"blank\">LinkedIn</a></p>\r\n                    <button id=\"modalbutton\" type=\"button\" data-toggle=\"modal\" className=\"btn btn-primary\" data-target=\"#exampleModal\">Click to send me a message</button>\r\n                    <p className=\"space\"></p></div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Contact;\r\n\r\n\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport About from './about'\nimport Contact from './Contact'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n         <section id=\"header\">\n      <button onClick={aboutMe}  type=\"button\" className=\"hvr-wobble-top\" id=\"about\">About</button>\n      <button onClick={contact} type=\"button\" className=\"hvr-wobble-top\" id=\"contact\">Contact</button>\n      <button type=\"button\" className=\"hvr-wobble-top\" id=\"portfolio\">Portfolio</button>\n      <button type=\"button\" className=\"hvr-wobble-top\" id=\"resume\">Resume</button>\n  </section >\n    \n    <section id=\"display\">\n      <div id=\"home\">\n        <div id=\"hometext\" className=\"animated bounce\">\n          <p>Agatha Kiecun</p>\n          <br></br>\n           <p>Full Stack Developer</p></div>\n    \n      </div>\n     \n\n\n    </section>\n      </div>\n    );\n  }\n}\n\nfunction aboutMe(){\n  ReactDOM.render(<About />, document.getElementById(\"root\"));\n\n}\n\nfunction contact(){\n  ReactDOM.render(<Contact />, document.getElementById(\"root\"));\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/agpic.f0b73acd.jpg\";"],"sourceRoot":""}